<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hospitalbackend.model.dao.TransactionLogMapper">

    <resultMap id="BaseResultMap" type="TransactionLog" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="invoice_code" property="invoiceCode" jdbcType="CHAR" />
        <result column="registration_id" property="registrationId" jdbcType="INTEGER" />
        <result column="patient_id" property="patientId" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="collection_id" property="collectionId" jdbcType="INTEGER" />
        <result column="project_id" property="projectId" jdbcType="INTEGER" />
        <result column="item_id" property="itemId" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="SMALLINT" />
        <result column="pay_type" property="payType" jdbcType="TINYINT" />
        <result column="total_money" property="totalMoney" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    </resultMap>

    <resultMap id="ItemResultMap" type="HashMap" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="invoice_code" property="invoiceCode" jdbcType="CHAR" />
        <result column="registration_id" property="registrationId" jdbcType="INTEGER" />
        <result column="patient_id" property="patientId" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="collection_id" property="collectionId" jdbcType="INTEGER" />
        <result column="project_id" property="projectId" jdbcType="INTEGER" />
        <result column="item_id" property="itemId" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="SMALLINT" />
        <result column="pay_type" property="payType" jdbcType="TINYINT" />
        <result column="total_money" property="totalMoney" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="item_status" property="itemStatus" jdbcType="TINYINT"/>
        <result column="department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="return_amount" property="returnAmount" jdbcType = "SMALLINT"/>
    </resultMap>

    <insert id="insert" parameterType="TransactionLog" useGeneratedKeys="true" keyProperty="id">
        insert into transaction_log (id, invoice_code, registration_id,
          patient_id, role_id, type,
          collection_id, project_id, item_id,
          amount, pay_type, total_money,
          status, gmt_create, gmt_modified
          )
        values (#{id,jdbcType=INTEGER}, #{invoiceCode,jdbcType=CHAR}, #{registrationId,jdbcType=INTEGER},
          #{patientId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR},
          #{collectionId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{itemId,jdbcType=VARCHAR},
          #{amount,jdbcType=SMALLINT}, #{payType,jdbcType=TINYINT}, #{totalMoney,jdbcType=DECIMAL},
          #{status,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
          )
    </insert>

    <insert id="insertSelective" parameterType="TransactionLog" useGeneratedKeys="true" keyProperty="id">
        insert into transaction_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="invoiceCode != null">
                invoice_code,
            </if>
            <if test="registrationId != null">
                registration_id,
            </if>
            <if test="patientId != null">
                patient_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="collectionId != null">
                collection_id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="itemId != null">
                item_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="totalMoney != null">
                total_money,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="invoiceCode != null">
                #{invoiceCode,jdbcType=CHAR},
            </if>
            <if test="registrationId != null">
                #{registrationId,jdbcType=INTEGER},
            </if>
            <if test="patientId != null">
                #{patientId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="collectionId != null">
                #{collectionId,jdbcType=INTEGER},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="itemId != null">
                #{itemId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=TINYINT},
            </if>
            <if test="totalMoney != null">
                #{totalMoney,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <select id="selectStatusOfProject" resultType="Integer">
        select status
        from transaction_log
        where collection_id = #{collectionId} and project_id = #{projectId}
        limit 1
    </select>

    <select id="getLogByRegistrationIdAndType" resultMap="BaseResultMap">
        select * from transaction_log
        where registration_id = #{registrationId} and type = #{type} and status = 2
    </select>

    <select id="getSelective"  resultMap="BaseResultMap">
        select * from transaction_log where 1=1
        <if test="invoiceCode != null"> and invoice_code = #{invoiceCode} </if>
        <if test="registrationId != null"> and registration_id = #{registrationId} </if>
        <if test="patientId != null"> and patient_id = #{patientId} </if>
        <if test="roleId != null"> and role_id = #{roleId} </if>
        <if test="type != null"> and type = #{type} </if>
        <if test="collectionId != null"> and collection_id = #{collectionId} </if>
        <if test="projectId != null"> and project_id = #{projectId} </if>
        <if test="itemId != null"> and item_id = #{itemId} </if>
        <if test="amount != null"> and amount = #{amount} </if>
        <if test="payType != null"> and pay_type = #{payType} </if>
        <if test="totalMoney != null"> and total_money = #{totalMoney} </if>
        <if test="status != null"> and status = #{status} </if>
    </select>

    <select id="listLogsByTableName" resultMap="ItemResultMap">
        select distinct t.*, p.department_id as department_id, p.status as item_status
        from transaction_log t, ${tableName} p
        where t.collection_id = p.id and t.registration_id = #{registrationId}
        and t.project_id = p.project_id and t.total_money > 0
    </select>

    <select id="getRegistrationLog" resultMap="ItemResultMap">
        select distinct t.*, r.is_normal as item_status
        from transaction_log t, registration r
        where
        t.registration_id = #{registrationId} and t.type = "挂号费"
        and t.registration_id = r.id and t.total_money > 0
    </select>

    <select id="getRecipeLogs" resultMap="ItemResultMap">
        select distinct t.*, r.department_id as department_id, r.status as item_status, r.return_amount
        from transaction_log t, recipe r
        where t.collection_id = r.id and t.registration_id = #{registrationId}
        and t.project_id = r.medicine_id and t.total_money > 0
    </select>

    <update id="update" parameterType="TransactionLog">
        update transaction_log
        <trim prefix="set" suffixOverrides=",">
            <if test="invoiceCode != null"> invoice_code = #{invoiceCode}, </if>
            <if test="registrationId != null"> registration_id = #{registrationId}, </if>
            <if test="patientId != null"> patient_id = #{patientId}, </if>
            <if test="roleId != null"> role_id = #{roleId}, </if>
            <if test="type != null"> type = #{type}, </if>
            <if test="collectionId != null"> collection_id = #{collectionId}, </if>
            <if test="projectId != null"> project_id = #{projectId}, </if>
            <if test="itemId != null"> item_id = #{itemId}, </if>
            <if test="amount != null"> amount = #{amount}, </if>
            <if test="payType != null"> pay_type = #{payType}, </if>
            <if test="totalMoney != null"> total_money = #{totalMoney}, </if>
            <if test="status != null"> status = #{status}, </if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateSelectiveAsReturned" parameterType="TransactionLog">
        update transaction_log set status = 3
        where collection_id = #{collectionId} and invoice_code = #{invoiceCode}
    </update>

    <select id="listCollectionProjectInfo" resultMap="BaseResultMap">
        select * from transaction_log
        where collection_id = #{collectionId} and invoice_code = #{invoiceCode}
    </select>

    <select id="getInvoiceCodeAndStatusByRegistrationId" resultMap="ItemResultMap">
        select distinct invoice_code, collection_id, status
        from transaction_log
        where registration_id = #{registrationId} and status != 4
    </select>

    <select id="listLogsByInvoiceCode" resultMap="BaseResultMap">
        select *
        from transaction_log
        where invoice_code = #{invoiceCode}
    </select>
</mapper>