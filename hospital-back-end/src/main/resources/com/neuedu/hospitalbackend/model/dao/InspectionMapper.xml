<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hospitalbackend.model.dao.InspectionMapper">

    <resultMap id="InspectionResultMap" type="Inspection">
        <id column="id" property="id"/>
        <result column="case_id" property="caseId"/>
        <result column="department_id" property="departmentId"/>
        <result column="project_id" property="projectId"/>
        <result column="status" property="status"/>
        <result column="goal" property="goal"/>
        <result column="result_description" property="resultDescription"/>
        <result column="result_image" property="resultImage"/>
        <result column="creator_role_id" property="creatorRoleId"/>
        <result column="inspection_role_id" property="inspectionRoleId"/>
        <result column="advice" property="advice"/>
        <result column="requirement" property="requirement"/>
    </resultMap>

    <insert id="insert" parameterType="com.neuedu.hospitalbackend.model.po.Inspection" >
    insert into inspection (id, case_id, project_id,
      status, gmt_modified, goal,
      result_image, result_description, creator_role_id,
      inspector_role_id, advice, gmt_create,
      requirement, department_id)
    values (#{id,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER},
      #{status,jdbcType=TINYINT}, #{gmtModified,jdbcType=TIMESTAMP}, #{goal,jdbcType=VARCHAR},
      #{resultImage,jdbcType=VARCHAR}, #{resultDescription,jdbcType=VARCHAR}, #{creatorRoleId,jdbcType=INTEGER},
      #{inspectorRoleId,jdbcType=INTEGER}, #{advice,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{requirement,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.neuedu.hospitalbackend.model.po.Inspection" >
        insert into inspection
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="caseId != null" >
                case_id,
            </if>
            <if test="projectId != null" >
                project_id,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="gmtModified != null" >
                gmt_modified,
            </if>
            <if test="goal != null" >
                goal,
            </if>
            <if test="resultImage != null" >
                result_image,
            </if>
            <if test="resultDescription != null" >
                result_description,
            </if>
            <if test="creatorRoleId != null" >
                creator_role_id,
            </if>
            <if test="inspectorRoleId != null" >
                inspector_role_id,
            </if>
            <if test="advice != null" >
                advice,
            </if>
            <if test="gmtCreate != null" >
                gmt_create,
            </if>
            <if test="requirement != null" >
                requirement,
            </if>
            <if test="departmentId != null" >
                department_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="caseId != null" >
                #{caseId,jdbcType=INTEGER},
            </if>
            <if test="projectId != null" >
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="gmtModified != null" >
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="goal != null" >
                #{goal,jdbcType=VARCHAR},
            </if>
            <if test="resultImage != null" >
                #{resultImage,jdbcType=VARCHAR},
            </if>
            <if test="resultDescription != null" >
                #{resultDescription,jdbcType=VARCHAR},
            </if>
            <if test="creatorRoleId != null" >
                #{creatorRoleId,jdbcType=INTEGER},
            </if>
            <if test="inspectorRoleId != null" >
                #{inspectorRoleId,jdbcType=INTEGER},
            </if>
            <if test="advice != null" >
                #{advice,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null" >
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="requirement != null" >
                #{requirement,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null" >
                #{departmentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <select id="listPreparedPatientsByCaseIdOrName" resultType="HashMap">
        select distinct c.registration_id, c.patient_name
        from patient_case c, inspection i, transaction_log t
        where i.id = t.collection_id and i.project_id = t.project_id
            and i.case_id = c.registration_id
            and i.status = 2 and i.department_id = #{departmentId}
            <if test = "caseId != null">
                and c.registration_id = #{caseId}
            </if>
            <if test="patientName != null and patientName != ''">
                and c.patient_name = #{patientName}
            </if>
    </select>

    <select id="listAppliedProjectsByCaseId" resultType="HashMap">
      select n.id, n.name, i.id, i.gmt_create, t.status, i.requirement
      from inspection i, non_medicine n, transaction_log t
      where t.registration_id = #{caseId}  and t.collection_id = i.id  and t.project_id = i.project_id
          and n.id = i.project_id
          and i.status = 2 and i.department_id = #{departmentId}
    </select>

    <update id="checkInProject">
        update inspection
        set status = 4, inspector_role_id = #{inspectorRoleId}
        where id = #{collectionId} and project_id = #{projectId} and status = 2
    </update>

    <update id="cancelProject">
        update inspection
        set status = 3
        where id = #{collectionId} and project_id = #{projectId} and status = 2
    </update>

    <select id="listCheckedInButNotRecordedProject" resultType="HashMap">
      select n.id, n.name, i.id, i.gmt_create, i.status as i_status, t.status as t_status, i.requirement
      from inspection i, non_medicine n, transaction_log t
      where t.registration_id = #{caseId}  and t.collection_id = i.id  and t.project_id = i.project_id
          and i.status = 4 and i.department_id = #{departmentId}
          and (result_description = null or result_description = '')
          and (result_image = null or result_image = '')
          and (advice = null or advice = '')
          and n.id = i.project_id
    </select>

    <update id="recordResult">
        update inspection
        set result_description = #{resultDescription}, result_image = #{resultImage}, advice = #{advice}
        where id = #{collectionId} and project_id = #{projectId}
    </update>

    <select id="getStatusOfProject" resultType="Integer">
        select status
        from inspection
        where id = #{collectionId} and project_id = #{projectId}
    </select>

    <update id="updateStatus">
        update inspection set status = #{status}
        where id = #{collectionId} and project_id = #{projectId}
    </update>

    <select id="getLatestId" resultType="Integer">
        select id
        from inspection
        order by id desc
        limit 1
    </select>

    <select id="listProjectIdsByCollectionId" resultType="Integer">
        select project_id
        from inspection
        where id = #{id}
    </select>

    <update id="updateInfo">
        update inspection
        set goal = #{goal}, requirement = #{requirement}, status = #{status}
        where id = #{id} and project_id = #{projectId}
    </update>

    <delete id="delete">
        delete
        from inspection
        where id = #{id} and project_id = #{projectId}
    </delete>

    <resultMap id="collectionDetail" type="HashMap">
        <id column="i_id" property="collectionId"/>
        <result column="project_id" property="projectId"/>
        <result column="project_name" property="projectName"/>
        <result column="department_id" property="departmentId"/>
        <result column="status" property="status"/>
        <result column="goal" property="goal"/>
        <result column="result_description" property="resultDescription"/>
        <result column="result_image" property="resultImage"/>
        <result column="advice" property="advice"/>
        <result column="requirement" property="requirement"/>
        <collection property="items"  javaType="java.util.List" ofType="HashMap">
            <id column="item_id" property="itemId"/>
            <result column="item_name" property="itemName"/>
            <result column="amount" property="amount"/>
        </collection>
    </resultMap>

    <select id="listCollectionDetail" resultMap="collectionDetail">
        select i.department_id, i.project_id, i.status, i.goal, i.requirement,
                i.result_description, i.result_image, i.advice,
                p.id as p_id, p.project_name, p.item_id, p.item_name, p.amount
        from inspection i, inspection_project p
        where i.case_id = #{caseId}
              and i.id = p.collection_id and i.project_id = p.project_id
    </select>

    <select id="getCollectionInfo" resultType="HashMap">
        select i.id as collectionId, creator_role_id as applicantRoleId
        from inspection i
        where case_id = #{caseId}
        limit 1
    </select>

    <select id="listItems" resultType="HashMap">
        select item_name as itemName, item_id as itemId, amount
        from inspection_project
        where collection_id = #{collectionId} and project_id = #{projectId}
    </select>

</mapper>